{"version":3,"sources":["Components/Filters/common.js","Components/Filters/QuantFilter.js","Components/Filters/season.js","Components/Filters/CategoryFilter.js","Components/App/index.js","Components/Filters/TimeFilter.js","Components/Table/csv.js","Components/Table/index.js","Components/App/sil.png","reportWebVitals.js","index.js"],"names":["common_filter_classes","QuantFilter","col","className","SeasonModal","useState","modal","setModal","modalRef","useRef","useEffect","Modal","current","toggle","ref","class","tabindex","type","aria-label","onClick","scope","colspan","catFunc","key","Set","row","struct","accepted","responsible","add","CatFilter","checkBoxUpdate","dispatch","checks","countryDisplay","seasonDisplay","locationDisplay","l","values","sort","selected","setSelected","length","filter","r","i","s","multiple","value","onChange","e","target","options","o","map","c","TimeFilter","createCSVBlob","data","cols","out","push","accessor","j","join","Blob","DataTable","keys","columns","useMemo","k","Header","tableInstance","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","page","state","pageIndex","pageSize","gotoPage","previousPage","nextPage","setPageSize","canPreviousPage","canNextPage","defaultValue","Number","style","width","href","window","URL","createObjectURL","download","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","disabled","dataDisplayUpdate","action","vkeys","Object","display","vdata","cdata","initdata","include","undefined","builder","visibleData","visibleKeys","colLoopData","reducer","el","t","filterType","gotData","error","Array","from","vselected","toAdd","common","mySet","has","mySet2","mySet3","countryDisplayUpdate","console","log","seasonDisplayUpdate","locationDisplayUpdate","App","React","checkedCountry","setCheckedCountry","checkedSeason","setCheckedSeason","checkedLocation","setCheckedLocation","Checkbox","label","checked","useReducer","fetch","then","d","json","catch","filter_els","colK","createElement","src","sil_img","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23367bc.chunk.js","sourcesContent":["const common_filter_classes = \"border border-3 shadow shadow-3 m-3 p-3\";\nexport { common_filter_classes };\n","import { common_filter_classes } from \"./common\";\n\nfunction quantFunc(key) {\n  const cb = (row, struct, accepted, responsible) => {\n    return struct;\n  };\n  return [() => [], cb];\n}\nfunction QuantFilter({ col }) {\n  return (\n    <div className={`${common_filter_classes} d-none`}>\n      <h5> QuantFilter for {col} </h5>\n      <p className=\"fst-italic\"> Coming soon </p>\n    </div>\n  );\n}\nexport { quantFunc, QuantFilter };\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Modal from \"bootstrap/js/dist/modal\";\n\nconst SeasonModal = () => {\n  let [modal, setModal] = useState();\n  let modalRef = useRef(null);\n\n  useEffect(() => {\n    setModal(new Modal(modalRef.current, {}));\n  }, [modalRef]);\n\n  const toggle = () => {\n    modal && modal.toggle();\n  };\n  //const vline = \"border-end vline\";\n  const vline = \"\";\n  return (\n    <div>\n      <div ref={modalRef} class=\"modal\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Country Specific Season Information</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={toggle}\n              />\n            </div>\n            <div class=\"modal-body\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"></th>\n                    <th\n                      class=\"table-active text-center\"\n                      colspan=\"2\"\n                      scope=\"col\"\n                    >\n                      Season 1\n                    </th>\n                    <th\n                      class=\"table-active text-center\"\n                      colspan=\"2\"\n                      scope=\"col\"\n                    >\n                      Season 2\n                    </th>\n                  </tr>\n                  <tr>\n                    <th scope=\"col\">Country</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Planting</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Planting</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Kenya</th>\n                    <td>Long Rain</td>\n                    <td className={vline}>March</td>\n                    <td>Short Rain</td>\n                    <td>September</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Malawi</th>\n                    <td>Winter</td>\n                    <td className={vline}>June</td>\n                    <td>Summer</td>\n                    <td>November</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Zimbabwe</th>\n                    <td>Winter</td>\n                    <td className={vline}>June</td>\n                    <td>Summer</td>\n                    <td>November</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Uganda</th>\n                    <td>A</td>\n                    <td className={vline}>May</td>\n                    <td>B</td>\n                    <td>October</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Rawanda</th>\n                    <td>-</td>\n                    <td className={vline}>March</td>\n                    <td>-</td>\n                    <td>October</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" onClick={toggle}>\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button className=\"btn btn-primary my-1\" onClick={toggle}>\n        {\" \"}\n        View Season Information{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport { SeasonModal };\n","import React, { useState, useEffect } from \"react\";\n\nimport { common_filter_classes } from \"./common\";\nimport { SeasonModal } from \"./season\";\nimport { getChecks } from \"../App/index\";\n\nfunction catFunc(key) {\n  const cb = (row, struct, accepted, responsible) => {\n    if (accepted || responsible) {\n      struct.add(row[key]);\n    }\n    return struct;\n  };\n  return [() => new Set(), cb];\n}\n\nfunction CatFilter({ col, struct, dispatch }) {\n  let checks = getChecks();\n  let checkBoxUpdate;\n  if (checks[\"countryDisplay\"]) {\n    checkBoxUpdate = \"COUNTRY_DISPLAY_UPDATE\";\n  } else if (checks[\"seasonDisplay\"]) {\n    checkBoxUpdate = \"SEASON_DISPLAY_UPDATE\";\n  } else if (checks[\"locationDisplay\"]) {\n    checkBoxUpdate = \"LOCATION_DISPLAY_UPDATE\";\n  } else {\n    checkBoxUpdate = \"FILTER_UPDATE\";\n  }\n  let l = [...struct.values()].sort();\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    \n    if (selected.length === 0) {\n      dispatch({ type: \"FILTER_UPDATE\", col: col, filter: (r) => true });\n    } else if (selected.length === 1) {\n      dispatch({\n        type: \"FILTER_UPDATE\",\n        col: col,\n        filter: (r) => {\n          for (var i = 0; i < selected.length; i++) {\n            if (r[col] === selected[i]) {\n              return true;\n            }\n          }          \n        }\n      });\n    } else {\n      let s = new Set(selected);\n      dispatch({\n        type: checkBoxUpdate,\n        col: col,\n        selected: s,\n        filter: (r) => {\n          for (var i = 0; i < selected.length; i++) {\n            if (r[col] === selected[i]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      });\n    }\n  }, [col, dispatch, selected]);\n  return (\n    <div className={common_filter_classes}>\n      <h5> Filter for {col} </h5>\n      <select\n        multiple\n        className=\"form-select\"\n        value={selected}\n        onChange={(e) =>\n          setSelected(\n            [...e.target.options].filter((o) => o.selected).map((o) => o.value)\n          )\n        }\n      >\n        {l.map((c) => (\n          <option key={c} value={c}>\n            {c}\n          </option>\n        ))}\n      </select>\n      {col === \"Season\" && <SeasonModal />}\n      <div className=\"btn btn-danger\" onClick={() => setSelected([])}>\n        {\" \"}\n        clear{\" \"}\n      </div>\n    </div>\n  );\n}\nexport { CatFilter, catFunc };\n","import React, { useReducer, useEffect, Component } from \"react\";\n\nimport { QuantFilter, quantFunc } from \"../Filters/QuantFilter\";\nimport { CatFilter, catFunc } from \"../Filters/CategoryFilter\";\nimport { TimeFilter, timeFunc } from \"../Filters/TimeFilter\";\n\nimport DataTable from \"../Table\";\n\nimport sil_img from \"./sil.png\";\n/*\n  What I'm think wrt in data display/select optoins\n  - \"D\": this column should be included in display\n  - \"C\": every option in this column should be a filterable category\n  - \"Q\": This should be a quantitativly filterable column\n  - \"T\": This column should allow time based filtering\n  \n  Here's what the implementation should look like:\n  We start by fetching the data and parsing it into the standard list of objects\n  format. We also parse the metadata header into a dict of column name -> value\n  (aka standard format). Then we initialize our filter data structure which is\n  just a dict of column name to filter function. The filters all start out just\n  being true. \n  Then the loop. We loop through the data, simultaneously filtering, and\n  building up the list of filter options as described below. The list of filter\n  options are later fed into the filters.\n  Then we initialize our filters elements. For each column which requires a\n  filter we create the appropriate filter type element; either\n  <QuantFilter> or <CategoryFilter> or whatever. Each of these filters has an\n  associated function which you use while iterating through all of the data so\n  that they can keep track of which filters are valid. The function like\n  maintains some datastructure returning the initial datastructure if not passed\n  anything and otherwise it takes the data structure and a new element and\n  returns the updated datastructure. The filter elements call a callback to update their filter and things loop again. The filters also need an option to clear the filter.\n */\n\nfunction gotData(state, action) {\n  let keys = action.keys;\n  let cols = {};\n  for (let key of Object.keys(keys)) {\n    let initdata = undefined;\n    let builder = undefined;\n    let el = undefined;\n    let t = keys[key];\n    switch (t.filterType) {\n      case \"Q\":\n        el = QuantFilter;\n        [initdata, builder] = quantFunc(key);\n        break;\n      case \"C\":\n        el = CatFilter;\n        [initdata, builder] = catFunc(key);\n        break;\n      case \"T\":\n        el = TimeFilter;\n        [initdata, builder] = timeFunc(key);\n        break;\n      default:\n        break;\n    }\n    cols[key] = {\n      filter: (row) => true,\n      display: t.display,\n      el: el,\n      builder: builder,\n      initdata: initdata,\n    };\n  }\n  let data = [];\n  for (let i = 0; i < action.data.length; i++) {\n    let row = {};\n    for (let col of Object.keys(action.data[i])) {\n      switch (keys[col].filterType) {\n        case \"Q\":\n          row[col] = action.data[i][col];\n          break;\n        case \"C\":\n          row[col] = `${action.data[i][col]}`;\n          break;\n        case \"T\":\n          row[col] = action.data[i][col];\n          break;\n        default:\n          row[col] = action.data[i][col];\n          break;\n      }\n    }\n    data.push(row);\n  }\n  state = { ...state, data: data, keys: action.keys, columns: cols };\n  return dataDisplayUpdate(state, {});\n}\nfunction countryDisplayUpdate(state, action) {\n  const { columns, data, selected } = state;\n  let vkeys = [];\n  for (let col of Object.keys(columns)) {\n    if (columns[col].display) {\n      vkeys.push(col);\n    }\n  }\n  let vdata = [];\n  let cdata = {};\n  for (let col of Object.keys(columns)) {\n    cdata[col] =\n      typeof columns[col].initdata === \"function\" && columns[col].initdata();\n  }\n  for (let i = 0; i < data.length; i++) {\n    let include = true;\n    let responsible = null;\n    for (let col of Object.keys(columns)) {\n      if (!columns[col].filter(data[i])) {\n        include = false;\n        if (responsible === null) {\n          responsible = col;\n        } else {\n          responsible = undefined;\n        }\n      }\n    }\n    \n    for (let col of Object.keys(columns)) {\n      if (columns[col].builder) {\n        cdata[col] = columns[col].builder(\n          data[i],\n          cdata[col],\n          include,\n          col === responsible\n        );\n      }\n    }\n\n    if (include) {\n      vdata.push(data[i]);\n    }\n    \n  }\n  let s = Array.from(selected);\n  let vselected = [];\n  for (let j = 0; j < s.length; j++) {\n    let toAdd = [];\n    for (let i = 0; i < vdata.length; i++) {\n      if (vdata[i][\"Entry\"] === s[j]) {\n        toAdd.push(vdata[i]);\n      }\n    } \n    vselected.push(toAdd);\n  }\n  let common = [];\n  for (let i = 0; i < vselected.length; i++) {\n    for (let j = i + 1; j < vselected.length; j++) {\n      for (let k = 0; k < vselected[i].length; k++) {\n        for (let l = 0; l < vselected[j].length; l++) {\n          if (vselected[i][k][\"Country\"] === vselected[j][l][\"Country\"]) {\n            common.push(vselected[i][k]);\n          }\n        }\n      }\n    }\n  }\n  const mySet = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Country\"].has(common[i][\"Country\"])) {\n      mySet.add(common[i][\"Country\"]);\n    }\n  }\n  cdata[\"Country\"] = mySet;\n  const mySet2 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Location\"].has(common[i][\"Location\"])) {\n      mySet2.add(common[i][\"Location\"]);\n    }\n  }\n  cdata[\"Location\"] = mySet2;\n  const mySet3 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Season\"].has(common[i][\"Season\"])) {\n      mySet3.add(common[i][\"Season\"]);\n    }\n  }\n  cdata[\"Season\"] = mySet3;\n  \n  vdata = common;\n  return {\n    ...state,\n    visibleData: vdata,\n    visibleKeys: vkeys,\n    colLoopData: cdata,\n  };\n}\n\nfunction seasonDisplayUpdate(state, action) {\n  const { columns, data, selected } = state;\n  let vkeys = [];\n  for (let col of Object.keys(columns)) {\n    if (columns[col].display) {\n      vkeys.push(col);\n    }\n  }\n  let vdata = [];\n  let cdata = {};\n  for (let col of Object.keys(columns)) {\n    cdata[col] =\n      typeof columns[col].initdata === \"function\" && columns[col].initdata();\n  }\n  for (let i = 0; i < data.length; i++) {\n    let include = true;\n    let responsible = null;\n    for (let col of Object.keys(columns)) {\n      if (!columns[col].filter(data[i])) {\n        include = false;\n        if (responsible === null) {\n          responsible = col;\n        } else {\n          responsible = undefined;\n        }\n      }\n    }\n    \n    for (let col of Object.keys(columns)) {\n      if (columns[col].builder) {\n        cdata[col] = columns[col].builder(\n          data[i],\n          cdata[col],\n          include,\n          col === responsible\n        );\n      }\n    }\n\n    if (include) {\n      vdata.push(data[i]);\n    }\n    \n  }\n  let s = Array.from(selected);\n  let vselected = [];\n  for (let j = 0; j < s.length; j++) {\n    let toAdd = [];\n    for (let i = 0; i < vdata.length; i++) {\n      if (vdata[i][\"Entry\"] === s[j]) {\n        toAdd.push(vdata[i]);\n      }\n    } \n    vselected.push(toAdd);\n  }\n  //check if multiple arrays have common elements\n  let common = [];\n  for (let i = 0; i < vselected.length; i++) {\n    for (let j = i + 1; j < vselected.length; j++) {\n      for (let k = 0; k < vselected[i].length; k++) {\n        for (let l = 0; l < vselected[j].length; l++) {\n          console.log(vselected[i][k][\"Season\"]);\n          console.log(vselected[j][l][\"Season\"]);\n          if (vselected[i][k][\"Season\"] === vselected[j][l][\"Season\"]) {\n            common.push(vselected[i][k]);\n          }\n        }\n      }\n    }\n  }\n  vdata = common;\n  const mySet = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Country\"].has(common[i][\"Country\"])) {\n      mySet.add(common[i][\"Country\"]);\n    }\n  }\n  cdata[\"Country\"] = mySet;\n  const mySet2 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Location\"].has(common[i][\"Location\"])) {\n      mySet2.add(common[i][\"Location\"]);\n    }\n  }\n  cdata[\"Location\"] = mySet2;\n  const mySet3 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Season\"].has(common[i][\"Season\"])) {\n      mySet3.add(common[i][\"Season\"]);\n    }\n  }\n  cdata[\"Season\"] = mySet3;\n  return {\n    ...state,\n    visibleData: vdata,\n    visibleKeys: vkeys,\n    colLoopData: cdata,\n  };\n}\nfunction locationDisplayUpdate(state, action) {\n  const { columns, data, selected } = state;\n  let vkeys = [];\n  for (let col of Object.keys(columns)) {\n    if (columns[col].display) {\n      vkeys.push(col);\n    }\n  }\n  let vdata = [];\n  let cdata = {};\n  for (let col of Object.keys(columns)) {\n    cdata[col] =\n      typeof columns[col].initdata === \"function\" && columns[col].initdata();\n  }\n  for (let i = 0; i < data.length; i++) {\n    let include = true;\n    let responsible = null;\n    for (let col of Object.keys(columns)) {\n      if (!columns[col].filter(data[i])) {\n        include = false;\n        if (responsible === null) {\n          responsible = col;\n        } else {\n          responsible = undefined;\n        }\n      }\n    }\n    \n    for (let col of Object.keys(columns)) {\n      if (columns[col].builder) {\n        cdata[col] = columns[col].builder(\n          data[i],\n          cdata[col],\n          include,\n          col === responsible\n        );\n      }\n    }\n\n    if (include) {\n      vdata.push(data[i]);\n    }\n    \n  }\n  let s = Array.from(selected);\n  let vselected = [];\n  for (let j = 0; j < s.length; j++) {\n    let toAdd = [];\n    for (let i = 0; i < vdata.length; i++) {\n      if (vdata[i][\"Entry\"] === s[j]) {\n        toAdd.push(vdata[i]);\n      }\n    } \n    vselected.push(toAdd);\n  }\n  let common = [];\n  for (let i = 0; i < vselected.length; i++) {\n    for (let j = i + 1; j < vselected.length; j++) {\n      for (let k = 0; k < vselected[i].length; k++) {\n        for (let l = 0; l < vselected[j].length; l++) {\n          if (vselected[i][k][\"Location\"] === vselected[j][l][\"Location\"]) {\n            common.push(vselected[i][k]);\n          }\n        }\n      }\n    }\n  }\n  vdata = common;\n  const mySet = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Country\"].has(common[i][\"Country\"])) {\n      mySet.add(common[i][\"Country\"]);\n    }\n  }\n  cdata[\"Country\"] = mySet;\n  const mySet2 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Location\"].has(common[i][\"Location\"])) {\n      mySet2.add(common[i][\"Location\"]);\n    }\n  }\n  cdata[\"Location\"] = mySet2;\n  const mySet3 = new Set();\n  for (let i = 0; i < common.length; i++) {\n    if (cdata[\"Season\"].has(common[i][\"Season\"])) {\n      mySet3.add(common[i][\"Season\"]);\n    }\n  }\n  cdata[\"Season\"] = mySet3;\n\n  return {\n    ...state,\n    visibleData: vdata,\n    visibleKeys: vkeys,\n    colLoopData: cdata,\n  };\n}\nfunction dataDisplayUpdate(state, action) {\n  const { columns, data } = state;\n  let vkeys = [];\n  for (let col of Object.keys(columns)) {\n    if (columns[col].display) {\n      vkeys.push(col);\n    }\n  }\n  let vdata = [];\n  let cdata = {};\n  for (let col of Object.keys(columns)) {\n    cdata[col] =\n      typeof columns[col].initdata === \"function\" && columns[col].initdata();\n  }\n  for (let i = 0; i < data.length; i++) {\n    \n    let include = true;\n    let responsible = null;\n    for (let col of Object.keys(columns)) {\n      if (!columns[col].filter(data[i])) {\n        include = false;\n        if (responsible === null) {\n          responsible = col;\n        } else {\n          responsible = undefined;\n        }\n      }\n    }\n    \n    for (let col of Object.keys(columns)) {\n      if (columns[col].builder) {\n        cdata[col] = columns[col].builder(\n          data[i],\n          cdata[col],\n          include,\n          col === responsible\n        );\n      }\n    }\n    \n    if (include) {\n      vdata.push(data[i]);\n    }\n  }\n  return {\n    ...state,\n    visibleData: vdata,\n    visibleKeys: vkeys,\n    colLoopData: cdata,\n  };\n}\n\nfunction reducer(state, action) {\n  let columns = state.columns;\n  switch (action.type) {\n    case \"DATA\":\n      state = gotData(state, action);\n      break;\n    case \"ERROR\":\n      state = { ...state, error: action.error };\n      break;\n    case \"DATA_DISPLAY_UPDATE\":\n      state = dataDisplayUpdate(state, action);\n      break;\n    case \"FILTER_UPDATE\":\n      columns[action.col].filter = action.filter;\n      state = { ...state, columns: columns };\n      state = dataDisplayUpdate(state, action);\n      break;\n    case \"COUNTRY_DISPLAY_UPDATE\":\n      columns[action.col].filter = action.filter;\n      state = { ...state, columns: columns, selected: action.selected };\n      state = countryDisplayUpdate(state, action);\n      break;\n      case \"SEASON_DISPLAY_UPDATE\":\n      columns[action.col].filter = action.filter;\n      state = { ...state, columns: columns, selected: action.selected };\n      state = seasonDisplayUpdate(state, action);\n      break;\n      case \"LOCATION_DISPLAY_UPDATE\":\n      columns[action.col].filter = action.filter;\n      state = { ...state, columns: columns, selected: action.selected };\n      state = locationDisplayUpdate(state, action);\n      break;\n    default:\n      break;\n  }\n  return state;\n}\nlet countryDisplay, seasonDisplay, locationDisplay;\nfunction setChecks(c, s, l) {\n  countryDisplay = c;\n  seasonDisplay = s;\n  locationDisplay = l;\n}\nfunction getChecks() {\n  return {\n    countryDisplay,\n    seasonDisplay,\n    locationDisplay,\n  };\n}\nexport { getChecks };\nfunction App() {\n  const [checkedCountry, setCheckedCountry] = React.useState(false);\n  const [checkedSeason, setCheckedSeason] = React.useState(false);\n  const [checkedLocation, setCheckedLocation] = React.useState(false);\n\n  const handleChangeOne = () => {\n    setCheckedCountry(!checkedCountry);\n  };\n \n  const handleChangeTwo = () => {\n    setCheckedSeason(!checkedSeason);\n  };\n  const handleChangeThree = () => {\n    setCheckedLocation(!checkedLocation);\n  };\n  const Checkbox = ({ label, value, onChange }) => {\n    return (\n      <label>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        {label}\n      </label>\n    );\n  };\n  setChecks(checkedCountry, checkedSeason, checkedLocation);\n  const [\n    { data, error, columns, visibleData, colLoopData, visibleKeys },\n    dispatch,\n  ] = useReducer(reducer, {\n    data: [],\n    keys: {},\n    error: null,\n    columns: {},\n    colLoopData: {},\n    visibleKeys: [],\n  });\n  \n  useEffect(() => {\n    fetch(\n      \"https://sil-interactive-soybean-map-data-1.s3.amazonaws.com/pat_db.json\"\n    )\n      .then((d) => d.json())\n      .then((d) => {\n        dispatch({ type: \"DATA\", data: d.data, keys: d.keys });\n      })\n      .catch((e) => {\n        dispatch({ type: \"ERROR\", error: e });\n      });\n  }, []);\n\n  if (error) {\n    return <h5> Error Occurred {error} </h5>;\n  } else if (data.length === 0) {\n    return <h5> Loading </h5>;\n  }\n\n  let filter_els = [];\n  for (let colK of Object.keys(columns)) {\n    let col = columns[colK];\n    if (col.el) {\n      filter_els.push(\n        React.createElement(col.el, {\n          key: colK,\n          col: colK,\n          struct: colLoopData[colK],\n          dispatch: dispatch,\n        })\n      );\n    }\n  }\n  return (\n    <div className=\"container\">\n      <img\n        src={sil_img}\n        className=\"mx-auto d-block\"\n        alt=\"SIL logo\"\n        style={{ \"max-width\": \"300px\" }}\n      />\n      <h1 className=\"display-1 text-center\">\n        Pan-African Soybean Variety Trials (PAT) Database{\" \"}\n      </h1>\n      <h1 class=\"display-6\">Introduction</h1>\n      <p>\n        The Soybean Innovation Lab’s Pan-African Soybean Variety Trials (PAT)\n        fast-track the introduction and testing of commercial soybean varieties\n        sourced from across Africa, the U.S., Australia, and Latin America to\n        provide the private sector, farmers, and processors with access to a\n        broader selection of seed than what is currently available. The program\n        consortium leverages its role as an independent third party and its\n        unique access to international, regional, and national supplies of\n        high-yielding germplasm to swiftly bring new varieties to market.\n      </p>\n      <p>\n        The PAT database covers results from trials in Benin, Cameroon,\n        Ethiopia, Ghana, Kenya, Malawi, Mali, Mozambique, Nigeria, Rwanda,\n        Sudan, Uganda, Zambia and Zimbabwe from 2015 to 2020.{\" \"}\n        <b>\n          The tool will be continuously updated to include other countries and\n          seasons of testing.\n        </b>\n      </p>\n      <h1 class=\"display-6\">Instructions</h1>\n      <p>\n        To explore the PAT database start with selecting one of the filters\n        below. The filters are connected, and the first selection will determine\n        the options available in the other filters. You can select multiple\n        options by holding the Ctrl key while clicking. If you decide to change\n        the filter, you can click on another option within the same filter or\n        select the option <b>clear</b>. The result of the selected filters will\n        show up as a table at the bottom of the screen. Please click{\" \"}\n        <b>Download as CSV</b> to download the data.\n      </p>\n      <p>\n        {\" \"}\n        Questions about this data?{\" \"}\n        <a href=\"mailto:soybeaninnovationlab@illinois.edu\">\n          {\" \"}\n          Please Contact SIL{\" \"}\n        </a>{\" \"}\n      </p>\n      <div class=\"checkbox\">\n        <div class=\"center-text\">\n        <p> If you wish select multiple entries, check the category you wish to find overlaps with. \n          If you want to display all of the data, leave the checkboxes blank.</p>\n          </div>\n          <div class=\"center\">\n      <Checkbox\n        label=\" Country\"\n        value={checkedCountry}\n        onChange={handleChangeOne}\n      />\n      {\"    \"}\n      <Checkbox\n        label=\" Season\"\n        value={checkedSeason}\n        onChange={handleChangeTwo}\n      />\n      {\"    \"}\n      <Checkbox\n        label=\" Location\"\n        value={checkedLocation}\n        onChange={handleChangeThree}\n      />\n      </div>\n    </div>\n      <div className=\"d-flex flex-wrap justify-content-evenly\">\n        {filter_els}\n      </div>\n      <div className=\"mb-5\">\n        <DataTable keys={visibleKeys} data={visibleData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { common_filter_classes } from \"./common\";\n\nfunction timeFunc(key) {\n  const cb = (row, struct, accepted, responsible) => {\n    return struct;\n  };\n  return [() => [], cb];\n}\nfunction TimeFilter({ col }) {\n  return (\n    <div className={`${common_filter_classes} d-none`}>\n      <h5> TimeFilter for {col} </h5>\n      <p className=\"fst-italic\"> Coming soon </p>\n    </div>\n  );\n}\nexport { timeFunc, TimeFilter };\n","export function createCSVBlob(data, cols) {\n  let out = [];\n  out.push(cols.map((c) => c.accessor));\n  for (let i = 0; i < data.length; i++) {\n    let row = [];\n    for (let j = 0; j < cols.length; j++) {\n      row.push(`\"${data[i][cols[j].accessor]}\"`);\n    }\n    out.push(row.join(\",\"));\n  }\n  return new Blob([out.join(\"\\n\")], { type: \"text/csv\" });\n}\n","import { useMemo } from \"react\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\n\nimport { createCSVBlob } from \"./csv\";\n\nfunction DataTable({ data, keys }) {\n  let columns = useMemo(() => {\n    return keys.map((k) => {\n      return { Header: k, accessor: k };\n    });\n  }, [keys]);\n  const tableInstance = useTable({ columns, data }, useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    pageOptions,\n    page,\n    state: { pageIndex, pageSize },\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n    canPreviousPage,\n    canNextPage,\n  } = tableInstance;\n  return (\n    <div>\n      <div className=\"d-flex align-items-end justify-content-between\">\n        <div className=\"d-flex flex-row align-items-end\">\n          <div className=\"d-flex flex-column\">\n            <div>\n              Page{\" \"}\n              <em>\n                {pageIndex + 1} of {pageOptions.length}\n              </em>\n            </div>\n            <div>Go to page:</div>\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1 || 1}\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </div>\n          <select\n            className=\"form-select\"\n            style={{ width: \"max-content\" }}\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n        <a\n          className=\"btn btn-primary\"\n          href={window.URL.createObjectURL(createCSVBlob(data, columns))}\n          download=\"pat-filtered-export.csv\"\n        >\n          {\" \"}\n          Download as CSV{\" \"}\n        </a>\n      </div>\n      <div style={{ width: \"100%\", \"overflow-x\": \"scroll\" }}>\n        <table\n          className=\"table\"\n          style={{ width: \"max-content\" }}\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <i class=\"bi bi-arrow-down-square-fill\"></i>\n                        ) : (\n                          <i class=\"bi bi-arrow-up-square-fill\"></i>\n                        )\n                      ) : (\n                        \"\"\n                      )}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between align-items-start\">\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          Previous Page\n        </button>\n        <button\n          className=\"btn btn-primary order-5\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","export default __webpack_public_path__ + \"static/media/sil.05e9e8c0.png\";","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}