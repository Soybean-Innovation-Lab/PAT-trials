{"version":3,"sources":["Components/Filters/common.js","Components/Filters/QuantFilter.js","Components/Filters/CategoryFilter.js","Components/Filters/TimeFilter.js","Components/Table/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["common_filter_classes","QuantFilter","col","className","catFunc","key","Set","row","struct","add","CatFilter","dispatch","l","values","sort","push","useState","selected","setSelected","useEffect","type","filter","r","value","onChange","e","target","map","c","TimeFilter","DataTable","data","keys","columns","useMemo","k","Header","accessor","tableInstance","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","page","state","pageIndex","pageSize","gotoPage","previousPage","nextPage","setPageSize","canPreviousPage","canNextPage","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","class","getRowProps","cells","cell","getCellProps","onClick","disabled","length","defaultValue","Number","dataDisplayUpdate","action","vkeys","Object","display","vdata","cdata","initdata","i","include","builder","visibleData","visibleKeys","colLoopData","reducer","cols","undefined","el","t","filterType","gotData","error","App","useReducer","console","log","fetch","then","d","json","catch","filter_els","colK","React","createElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc6143b1.chunk.js","sourcesContent":["const common_filter_classes = \"border border-3 shadow shadow-3 m-3 p-3\";\nexport { common_filter_classes };\n","import { common_filter_classes } from \"./common\";\n\nfunction quantFunc(key) {\n  const cb = (row, struct) => {\n    return struct;\n  };\n  return [() => [], cb];\n}\nfunction QuantFilter({ col }) {\n  return (\n    <div className={common_filter_classes}>\n      <h5> QuantFilter for {col} </h5>\n      <p className=\"fst-italic\"> Coming soon </p>\n    </div>\n  );\n}\nexport { quantFunc, QuantFilter };\n","import React, { useState, useEffect } from \"react\";\n\nimport { common_filter_classes } from \"./common\";\n\nfunction catFunc(key) {\n  const cb = (row, struct) => {\n    struct.add(row[key]);\n    return struct;\n  };\n  return [() => new Set(), cb];\n}\nfunction CatFilter({ col, struct, dispatch }) {\n  let l = [...struct.values()].sort();\n  l.push(\"None\");\n  const [selected, setSelected] = useState(\"None\");\n  useEffect(() => {\n    if (selected === \"None\") {\n      dispatch({ type: \"FILTER_UPDATE\", col: col, filter: (r) => true });\n    } else {\n      dispatch({\n        type: \"FILTER_UPDATE\",\n        col: col,\n        filter: (r) => r[col] === selected,\n      });\n    }\n  }, [col, dispatch, selected]);\n  return (\n    <div className={common_filter_classes}>\n      <h5> CatFilter for {col} </h5>\n      <select\n        className=\"form-select\"\n        value={selected}\n        onChange={(e) => setSelected(e.target.value)}\n      >\n        {l.map((c) => (\n          <option key={c} value={c}>\n            {c}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\nexport { CatFilter, catFunc };\n","import { common_filter_classes } from \"./common\";\n\nfunction timeFunc(key) {\n  const cb = (row, struct) => {\n    return struct;\n  };\n  return [() => [], cb];\n}\nfunction TimeFilter({ col }) {\n  return (\n    <div className={common_filter_classes}>\n      <h5> TimeFilter for {col} </h5>\n      <p className=\"fst-italic\"> Coming soon </p>\n    </div>\n  );\n}\nexport { timeFunc, TimeFilter };\n","import { useMemo } from \"react\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\n\nfunction DataTable({ data, keys }) {\n  let columns = useMemo(() => {\n    return keys.map((k) => {\n      return { Header: k, accessor: k };\n    });\n  }, [keys]);\n  const tableInstance = useTable({ columns, data }, useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    pageOptions,\n    page,\n    state: { pageIndex, pageSize },\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n    canPreviousPage,\n    canNextPage,\n  } = tableInstance;\n  return (\n    <div>\n      <table className=\"table\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <i class=\"bi bi-arrow-down-square-fill\"></i>\n                      ) : (\n                        <i class=\"bi bi-arrow-up-square-fill\"></i>\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          Previous Page\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          Next Page\n        </button>\n        <div>\n          Page{\" \"}\n          <em>\n            {pageIndex + 1} of {pageOptions.length}\n          </em>\n        </div>\n        <div>Go to page:</div>\n        <input\n          type=\"number\"\n          defaultValue={pageIndex + 1 || 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          }}\n        />\n        <select\n          className=\"form-select\"\n          value={pageSize}\n          onChange={(e) => {\n            setPageSize(Number(e.target.value));\n          }}\n        >\n          {[10, 20, 30, 40, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { QuantFilter, quantFunc } from \"../Filters/QuantFilter\";\nimport { CatFilter, catFunc } from \"../Filters/CategoryFilter\";\nimport { TimeFilter, timeFunc } from \"../Filters/TimeFilter\";\n\nimport DataTable from \"../Table\";\n/*\n  What I'm think wrt in data display/select optoins\n  - \"D\": this column should be included in display\n  - \"C\": every option in this column should be a filterable category\n  - \"Q\": This should be a quantitativly filterable column\n  - \"T\": This column should allow time based filtering\n  \n  Here's what the implementation should look like:\n  We start by fetching the data and parsing it into the standard list of objects\n  format. We also parse the metadata header into a dict of column name -> value\n  (aka standard format). Then we initialize our filter data structure which is\n  just a dict of column name to filter function. The filters all start out just\n  being true. \n  Then the loop. We loop through the data, simultaneously filtering, and\n  building up the list of filter options as described below. The list of filter\n  options are later fed into the filters.\n  Then we initialize our filters elements. For each column which requires a\n  filter we create the appropriate filter type element; either\n  <QuantFilter> or <CategoryFilter> or whatever. Each of these filters has an\n  associated function which you use while iterating through all of the data so\n  that they can keep track of which filters are valid. The function like\n  maintains some datastructure returning the initial datastructure if not passed\n  anything and otherwise it takes the data structure and a new element and\n  returns the updated datastructure. The filter elements call a callback to update their filter and things loop again. The filters also need an option to clear the filter.\n */\n\nfunction gotData(state, action) {\n  let keys = action.keys;\n  let cols = {};\n  for (let key of Object.keys(keys)) {\n    let initdata = undefined;\n    let builder = undefined;\n    let el = undefined;\n    let t = keys[key];\n    switch (t.filterType) {\n      case \"Q\":\n        el = QuantFilter;\n        [initdata, builder] = quantFunc(key);\n        break;\n      case \"C\":\n        el = CatFilter;\n        [initdata, builder] = catFunc(key);\n        break;\n      case \"T\":\n        el = TimeFilter;\n        [initdata, builder] = timeFunc(key);\n        break;\n      default:\n        break;\n    }\n    cols[key] = {\n      filter: (row) => true,\n      display: t.display,\n      el: el,\n      builder: builder,\n      initdata: initdata,\n    };\n  }\n  state = { ...state, data: action.data, keys: action.keys, columns: cols };\n  return dataDisplayUpdate(state, {});\n}\nfunction dataDisplayUpdate(state, action) {\n  const { columns, data } = state;\n  let vkeys = [];\n  for (let col of Object.keys(columns)) {\n    if (columns[col].display) {\n      vkeys.push(col);\n    }\n  }\n  let vdata = [];\n  let cdata = {};\n  for (let col of Object.keys(columns)) {\n    cdata[col] =\n      typeof columns[col].initdata === \"function\" && columns[col].initdata();\n  }\n  for (let i = 0; i < data.length; i++) {\n    let include = true;\n    for (let col of Object.keys(columns)) {\n      if (!columns[col].filter(data[i])) {\n        include = false;\n        break;\n      }\n    }\n    if (!include) {\n      continue;\n    }\n    vdata.push(data[i]);\n    for (let col of Object.keys(columns)) {\n      if (columns[col].builder) {\n        cdata[col] = columns[col].builder(data[i], cdata[col]);\n      }\n    }\n  }\n  return {\n    ...state,\n    visibleData: vdata,\n    visibleKeys: vkeys,\n    colLoopData: cdata,\n  };\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"DATA\":\n      state = gotData(state, action);\n      break;\n    case \"ERROR\":\n      state = { ...state, error: action.error };\n      break;\n    case \"DATA_DISPLAY_UPDATE\":\n      state = dataDisplayUpdate(state, action);\n      break;\n    case \"FILTER_UPDATE\":\n      let columns = state.columns;\n      columns[action.col].filter = action.filter;\n      state = { ...state, columns: columns };\n      state = dataDisplayUpdate(state, action);\n      break;\n    default:\n      break;\n  }\n  return state;\n}\n\nfunction App() {\n  const [\n    { data, error, columns, visibleData, colLoopData, visibleKeys },\n    dispatch,\n  ] = useReducer(reducer, {\n    data: [],\n    keys: {},\n    error: null,\n    columns: {},\n    colLoopData: {},\n    visibleKeys: [],\n  });\n\n  console.log(colLoopData);\n\n  useEffect(() => {\n    fetch(\"data.json\")\n      .then((d) => d.json())\n      .then((d) => {\n        dispatch({ type: \"DATA\", data: d.data, keys: d.keys });\n      })\n      .catch((e) => {\n        dispatch({ type: \"ERROR\", error: e });\n      });\n  }, []);\n\n  if (error) {\n    return <h5> Error Occurred {error} </h5>;\n  } else if (data.length === 0) {\n    return <h5> Loading </h5>;\n  }\n\n  let filter_els = [];\n  for (let colK of Object.keys(columns)) {\n    let col = columns[colK];\n    if (col.el) {\n      filter_els.push(\n        React.createElement(col.el, {\n          key: colK,\n          col: colK,\n          struct: colLoopData[colK],\n          dispatch: dispatch,\n        })\n      );\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex flex-wrap justify-content-center\">\n        {filter_els}\n      </div>\n      <div>\n        <DataTable keys={visibleKeys} data={visibleData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}